---
#################### get source code from git if not local machine
- name: Pull {{ project_name }} source from the repository if not localhost
  git: repo="{{ project_repo }}"
       dest="{{ project_path }}" version=master accept_hostkey=True force=yes
  when: inventory_hostname != "localhost.localdomain"
  notify:
    - restart uwsgi
  tags: deploy django

#################### setup python packages from requirements file
- name: Setup {{ project_name }} virtualenv site packages in {{ base_dir }}/.virtualenvs/{{ project_name }}
  pip: virtualenv={{ base_dir }}/.virtualenvs/{{ project_name }}
       requirements="{{ requirements_file }}"
  tags: deploy django

#################### deploy django project
- name: ensure any services that need to be restarted ARE restarted
  meta: flush_handlers

- name: ensure all services are started (final check)
  become: yes
  become_user: root
  service: name={{ item }} state=started enabled=yes
  with_items:
    - ntpd
    - firewalld
    - nginx
    - redis
    - postgresql-9.5
    - celery
    - celerybeat
    - uwsgi
  tags: deploy django

- name: Initialise Django - makemigrations and migrate, and create superuser
  shell: . /usr/local/bin/virtualenvwrapper.sh && workon {{ project_name }} &&
    ./manage.py collectstatic --noinput &&
    ./manage.py makemigrations &&
    ./manage.py migrate &&
    ./manage.py loaddata site &&
    echo "from django.contrib.auth.models import User; User.objects.create_superuser('graham', 'chesters99@yahoo.com', 'testpass')" | python manage.py shell
  args:
    executable: /bin/bash
    chdir: /{{ project_path }}
  tags: deploy django

- name: Ensure static directories are 0755 for nginx (after collectstatic)
  command: find {{ project_path }}/static/root -type d -exec chmod 0755 {} \;
  tags: deploy django

- name: Ensure static files are 0644 for nginx (after collectstatic)
  command: find {{ project_path }}/static/root -type f -exec chmod 0644 {} \;
  tags: deploy django
