---

#################### get source code from git if not local machine

- name: Pull {{ project_name }} source from the repository if not localhost
  git: repo="{{ project_repo }}"
       dest="{{ project_path }}" version=master accept_hostkey=True force=yes
  when: inventory_hostname != "localhost.localdomain"
  notify:
    - restart uwsgi
  tags: deploy code

- name: Copy secrets file to host if not localhost
  copy: src="../{{ project_name }}/settings/secret/production_secrets.json"
        dest={{ project_path }}/{{ project_name }}/settings/secret/ force=yes
  when: inventory_hostname != "localhost.localdomain"
  tags: deploy code

#################### deploy nginx config and restart nginx

- name: Create the Nginx configuration file
  become: yes
  become_user: root
  template: src=nginx.conf.j2 dest=/etc/nginx/conf.d/nginx.conf
            owner=nginx group=nginx backup=yes force=yes
  tags: deploy nginx

- name: copy SSL files to remote host nginx conf
  become: yes
  become_user: root
  copy: src={{ item }} dest=/etc/nginx/conf.d owner=nginx group=nginx force=yes
  with_items:
    - "../{{ project_name }}/settings/secret/{{ group_names[0] }}_cert.pem"
    - "../{{ project_name }}/settings/secret/{{ group_names[0] }}_key.pem"
    - "../{{ project_name }}/settings/secret/dhparams.pem"
  notify:
    - reload nginx
  tags: deploy nginx

#################### deploy redis config

- name: Create the redis configuration file
  become: yes
  become_user: root
  template: src=redis.conf.j2 dest=/etc/redis.conf mode=0664
            owner=nginx group=nginx backup=yes force=yes
  notify:
    - restart redis
  tags: deploy redis

#################### deploy code and initialise django

- name: Setup {{ project_name }} virtualenv site packages in {{ base_dir }}/.virtualenvs/{{ project_name }}
  pip: virtualenv={{ base_dir }}/.virtualenvs/{{ project_name }}
       requirements="{{ project_path }}/requirements/{{ group_names[0] }}.txt"
  tags: deploy django

- name: configure celery before django manage.py
  become: yes
  become_user: root
  template: src=celery.conf.j2 dest=/etc/celery.conf mode=0664
            owner=nginx group=nginx backup=yes force=yes
  tags: deploy django

- name: Initialise Django - makemigrations and migrate, and create superuser
  shell: . /usr/local/bin/virtualenvwrapper.sh && workon {{ project_name }} &&
    export DJANGO_SETTINGS_MODULE={{ django_settings_module }} &&
    ./manage.py collectstatic --noinput &&
    ./manage.py makemigrations &&
    ./manage.py migrate &&
    ./manage.py loaddata site &&
    echo "from django.contrib.auth.models import User; User.objects.create_superuser('graham', 'chesters99@yahoo.com', 'testpass')" | python manage.py shell
  args:
    executable: /bin/bash
    chdir: /{{ project_path }}
  tags: deploy django

- name: Ensure static directories are 0755 for nginx (after collectstatic)
  command: find {{ project_path }}/static/root -type d -exec chmod 0755 {} \;
  tags: deploy django

- name: Ensure static files are 0644 for nginx
  command: find {{ project_path }}/static/root -type f -exec chmod 0644 {} \;
  tags: deploy django

#################### deploy uwsgi config and restart

- name: Create the uwsgi configuration file
  become: yes
  become_user: root
  template: src=uwsgi.ini.j2 dest=/etc/uwsgi/vassals/uwsgi.ini
            owner=nginx group=nginx force=yes
  notify:
    - restart uwsgi
  tags: deploy uwsgi

- name: restart celery services
  notify:
    - restart celery
    - restart celerybeat
