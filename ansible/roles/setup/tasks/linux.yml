---
#################### Install linux packages, setup linux and user

- name: Set hostname
  become: yes
  become_user: root
  hostname: name="{{ inventory_hostname }}"
  tags: install linux

- name: Install RPM forge repo (for htop)
  become: yes
  become_user: root
  yum: name=http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el7.rf.x86_64.rpm state=present
  tags: install linux

- name: install the pg_top rpm from a remote repo
  become: yes
  become_user: root
  yum: name=http://yum.postgresql.org/9.5/redhat/rhel-7-x86_64/pgdg-redhat95-9.5-2.noarch.rpm state=present
  tags: install linux

- name: Upgrade all existing packages
  become: yes
  become_user: root
  yum: name=* state=latest
  tags: install linux

- name: Ensure key linux packages are installed and the latest versions
  become: yes
  become_user: root
  yum: name={{ item }} state=latest
  with_items:
    - bash
    - openssl       # required for python3, pip
    - openssl-devel # required for python3, pip
    - libffi-devel  # required for pip installs (cryptography)
    - ntp
    - git
    - gcc           # required for amazon ec2 redhat 7.2
    - firewalld     # required for amazon ec2 redhat 7.2
    - htop          # system performance
    - pg_top95      # database performance
    - ncurses-devel # required for uwsgitop (includes curses in standard libary)
    - sysstat       # system performance monitoring
    - perl-App-cpanminus # for pgbadger perl MCPAN installs
    - perl-CPAN     # for pgbadger perl MCPAN installs
  tags: install linux

- name: Change SELINUX to permissive permanently
  become: yes
  become_user: root
  lineinfile:
    dest: /etc/selinux/config
    regexp: '^SELINUX=enforcing'
    line: "SELINUX=permissive"
  ignore_errors: yes
  tags: install linux

- name: Change SELINUX to permissive NOW
  become: yes
  become_user: root
  command: setenforce 0
  ignore_errors: yes
  tags: install linux

- name: Set {{ ansible_user }} directory to be group executable (for nginx access)
  file: path={{ base_dir }} state=directory mode="g=rx"
  tags: install linux

- name: Create {{ project_name }} directory if not localhost
  file: path={{ project_name }} state=directory mode=0750
  when: inventory_hostname != "localhost.localdomain"
  tags: install linux

- name: Add exports/aliases to bash_profile
  become: yes
  become_user: root
  blockinfile:
    dest: "{{ base_dir }}/.bash_profile"
    block: |
      export PATH=/usr/local/bin:$PATH
      export WORKON_HOME=$HOME/.virtualenvs
      export PROJECT_HOME=$HOME
      source /usr/local/bin/virtualenvwrapper.sh
      alias m='./manage.py'
      alias celw='celery -A BankValDj worker --loglevel=INFO'
      export DJANGO_SETTINGS_MODULE={{ django_settings_module }}
      export PYTHONPATH=PYTHONPATH:{{ base_dir }}/.virtualenvs/{{ project_name }}/lib/python3.5/site-packages/:{{ base_dir }}/BankValDj/:
      workon {{ project_name }}
  tags: install linux

- name: Check current timezone
  become: yes
  become_user: root
  shell: ll /etc/localtime | rev| cut -f1 -d"/" | rev
  register: current_zone
  changed_when: False
  tags: install linux

- name: Set Europe/London timezone
  become: yes
  become_user: root
  file: src=/usr/share/zoneinfo/{{ timezone }}  dest=/etc/localtime state=link force=yes
  when: current_zone.stdout != '{{ timezone }}'
  tags: install linux

- name: restart ntp daemon
  become: yes
  become_user: root
  service: name=ntpd state=restarted enabled=yes
  tags: install linux
