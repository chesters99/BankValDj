---

- name: Install PostgreSQL (install via yum as per advice on postgresql website)
  become: yes
  become_user: root
  yum: name=http://yum.postgresql.org/9.5/redhat/rhel-7-x86_64/pgdg-redhat95-9.5-2.noarch.rpm state=installed
  tags: install database

- name: Install PostgreSQL 9.5 (install via yum as per advice on postgresql website)
  become: yes
  become_user: root
  yum: name={{ item }} state=installed
  with_items:
    - postgresql95-server
    - postgresql95-contrib
    - postgresql95-devel
    - python-psycopg2
  tags: install database

- name: Initialise database
  become: yes
  become_user: root
  command: /usr/pgsql-9.5/bin/postgresql95-setup initdb
           creates=/var/lib/pgsql/9.5/data/postgresql.conf
  tags: install database

- name: link pg_config for pip install psycopg2
  become: yes
  become_user: root
  file: src=/usr/pgsql-9.5/bin/pg_config dest=/usr/local/bin/pg_config state=link
  tags: install database

- name: postgresql should listen on all ports
  become: yes
  become_user: postgres
  lineinfile: dest=/var/lib/pgsql/9.5/data/postgresql.conf
              regexp="^listen_addresses"
              line="listen_addresses = '*'" state=present
  tags: install database

- name: postgresql should allow access from anywhere
  become: yes
  become_user: postgres
  lineinfile: dest=/var/lib/pgsql/9.5/data/pg_hba.conf backup=yes
              regexp="^0.0.0.0"
              line="host    all           all           0.0.0.0/0     md5" state=present
  tags: install database

- name: postgresql should allow access via md5 not ident
  become: yes
  become_user: postgres
  replace: dest=/var/lib/pgsql/9.5/data/pg_hba.conf regexp='ident' replace='md5' backup=yes
  tags: install database

- name: Ensure the PostgreSQL service is running
  become: yes
  become_user: root
  service: name=postgresql-9.5 state=started enabled=yes
  tags: install database

- name: Ensure database is created
  become: yes
  become_user: postgres
  postgresql_db: name={{ db_name }} state=present
  tags: install database

- name: Ensure user has access to the database
  become: yes
  become_user: postgres
  postgresql_user: db={{ db_name }} name={{ db_user }} password={{ db_password }} priv=ALL role_attr_flags=CREATEDB state=present
  tags: install database

- name: Start firewalld to add new rules
  become: yes
  become_user: root
  service: name=firewalld state=restarted
  tags: install database

- name: Allow port 5432 through firewall
  become: yes
  become_user: root
  firewalld: port=5432/tcp zone=public immediate=yes permanent=true state=enabled
  tags: install database
